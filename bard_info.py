def bard_info():
	print('')
	print('Detect Noise Modifiers')
	print('Distance (in/outdoor)      Mod  |     Sound Obstruction     Mod')
	print('             <5 ft/yd      10%  |           Closed Door    -50%')
	print('             25 ft/yd       0%  |   Ear pressed to door    -20%')
	print('             50 ft/yd     -10%  |      Bend in corridor    -10%')
	print('            100 ft/yd     -25%  |              Curtains    -15%')
	print('            150 ft/yd     -50%  |  ')
	print('            200 ft/yd     -75%  |  ')
	print('            300 ft/yd    -100%  |  ')
	print('                                |  ')
	print('         Ear Covering      Mod  |          Sound Volume     Mod')
	print('                  Cap     -10%  |               Whisper    -25%')
	print('                Scarf     -10%  |        Personal Convo      0%')
	print('                  Hat     -25%  |  Speaking to audience     10%')
	print('       Leather Helmet     -50%  |              Shouting     25%')
	print('         Metal Helmet     -75%  |               Yelling     50%')
	print('')
	print("Bards are attentive to every sound or noise,\nno matter how small or seemingly insignificant,\nincluding faint sounds that most others\nmiss\n\nThe rules listed in the Player's Handbook\nunder the thief and bard classes (as well as in\nthe DUNGEON MASTER Guide under "Listening"\nin Chapter 15) state that a listener may\nattempt to pick up faint sounds any time he\nwants, simply by standing still and listening\nfor one round. Any head gear (hat, helmet,\netc.) must be removed and there cannot be\nany noise in the immediate vicinity (i.e., party\nmembers must be quiet). The check is made\nsecretly by the Dungeon Master. Success\nmeans that the listener picks up some noise.\n\nAdditional checks can be made in which the\nlistener can attempt to discern one of the following\n(per check):\n - number of beings\n - race\n - exact direction\n - movement\n - bits of convo\n \nOnce a check fails, no more information can\nbe gained unless conditions change considerably\nand favorably.")
	input("press Enter to continue to CLIMBING MODIFIERS")

	print('')
	print('Climbing Modifiers')
	print("            Miscellaneous      Mod")
	print("           Rope and wall*      55%      * applies when the character ")
	print("           Encumberance**      -5%        can brace their feet against")
	print("          Climber <1/2 HP     -10%        the wall and use the rope to")
	print("                                          assist in the climb.")
	print("Rappelling down a surface                ")
	print("   bottom of rope is held      50%     ** cumulative for every encum-")
	print("  bottom of rope not held      30%        berance category above un-")
	print("                                          encumbered.")
	print("         Surface condition               ")
	print("Abundant handholds             40%       ")
	print("    (brush, trees, ledges)               ")
	print("Sloped inward                  25%       ")
	print("Slightly slippery             -25%       ")
	print("    (wet or crumbling)                   ")
	print("Slippery                      -40%       ")
	print("     (ice, slimy)                        ")
	input("press Enter to continue to ARMOR MODIFIERS FOR CLIMBING")

	print("")
	print("     Armor Type     Mod")
	print("           None     10%")
	print("        Leather      0%")
	print("         Padded     -5%")
	print("Studded Leather     -5%")
	print("      Ring Mail    -15%")
	print("     Brigandine    -25%")
	print("     Scale Mail    -25%")
	print("     Hide Armor     -5%")
	print("     Chain Mail    -15%")
	print("    Elven Chain     -5%")
	print("    Splint Mail    -25%")
	print("   Banded Armor    -25%")
	print("     Plate Mail    -50%")
	print("   Bronze Plate    -50%")
	print("    Field Plate    -50%")
	print("     Full Plate    -50%")
	input("press Enter to continue to CLIMBING RATES AND DAMAGE")

	print("")
	print("Damage: falling is 1d6 per 10 ft.")
	print("Spikes and Pitons pull out 15% of the time")
	print("")
	print("Type of Surface    Dry    Slightly Slippery    Slippery")
	print("    Very Smooth    1/2                  1/4           0")
	print("Smooth, cracked      1                  2/3         1/2")
	print("          Rough      2                  2/3         1/2")
	print("Rough w/ ledges      2                    1         2/3")
	print("       Ice wall      0                    0         1/2")
	print("           Tree      8                    6           4")
	print("   Sloping wall      6                    4           2")
	print("  Rope and wall      4                    2           1")
	print("     Rappelling     20                   10          10")
	print("")
	input("press Enter to return")